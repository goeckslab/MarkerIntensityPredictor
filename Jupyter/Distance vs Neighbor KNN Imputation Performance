{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 296,
   "id": "202d9ed9-d2ae-4810-9011-bec2b4241a64",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "case_to_evaluate=\"9_3_2\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6d49c84a-2aff-4e0f-a1e9-927c1722679f",
   "metadata": {},
   "source": [
    "# Distance based vs Neighbor based KNN Imputation Comparison"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 297,
   "id": "2b9de780-9f6f-491f-993e-f8e2e79d579d",
   "metadata": {},
   "outputs": [],
   "source": [
    "distance_based_r2_scores = pd.read_csv(f\"data/{case_to_evaluate}/distance_based/combined_r2_scores.csv\")\n",
    "neighbor_based_r2_scores = pd.read_csv(f\"data/{case_to_evaluate}/neighbor_based/combined_r2_scores.csv\")\n",
    "features_to_impute = pd.read_csv(f\"data/{case_to_evaluate}/distance_based/features_to_impute.csv\")\n",
    "\n",
    "features_to_impute = features_to_impute[\"0\"].to_list()\n",
    "if \"X_centroid\" in features_to_impute:\n",
    "    features_to_impute.remove(\"X_centroid\")\n",
    "\n",
    "if \"Y_centroid\" in features_to_impute:\n",
    "    features_to_impute.remove(\"Y_centroid\")\n",
    "\n",
    "distance_based_r2_scores.rename(columns={\"Radius\": \"Origin\"}, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 298,
   "id": "8e1da5b2-5f85-4c50-81cd-aa81a207bd94",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Feature</th>\n",
       "      <th>Score</th>\n",
       "      <th>Origin</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>pERK</td>\n",
       "      <td>0.331299</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Rad51</td>\n",
       "      <td>0.161001</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CCND1</td>\n",
       "      <td>0.353240</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Vimentin</td>\n",
       "      <td>0.124910</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>aSMA</td>\n",
       "      <td>0.224598</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>125</th>\n",
       "      <td>MajorAxisLength</td>\n",
       "      <td>0.076614</td>\n",
       "      <td>125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>126</th>\n",
       "      <td>MinorAxisLength</td>\n",
       "      <td>0.167688</td>\n",
       "      <td>125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>127</th>\n",
       "      <td>Solidity</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>128</th>\n",
       "      <td>Extent</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129</th>\n",
       "      <td>Eccentricity</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>125</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>130 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             Feature     Score  Origin\n",
       "0               pERK  0.331299      30\n",
       "1              Rad51  0.161001      30\n",
       "2              CCND1  0.353240      30\n",
       "3           Vimentin  0.124910      30\n",
       "4               aSMA  0.224598      30\n",
       "..               ...       ...     ...\n",
       "125  MajorAxisLength  0.076614     125\n",
       "126  MinorAxisLength  0.167688     125\n",
       "127         Solidity  0.000000     125\n",
       "128           Extent  0.000000     125\n",
       "129     Eccentricity  0.000000     125\n",
       "\n",
       "[130 rows x 3 columns]"
      ]
     },
     "execution_count": 298,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "distance_based_r2_scores"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 299,
   "id": "d38f3ad4-4e67-45ee-a811-857f7b6cee80",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Feature</th>\n",
       "      <th>Score</th>\n",
       "      <th>Origin</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>pERK</td>\n",
       "      <td>0.223691</td>\n",
       "      <td>no_spatial 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Rad51</td>\n",
       "      <td>-0.106551</td>\n",
       "      <td>no_spatial 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CCND1</td>\n",
       "      <td>-0.010202</td>\n",
       "      <td>no_spatial 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Vimentin</td>\n",
       "      <td>0.105831</td>\n",
       "      <td>no_spatial 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>aSMA</td>\n",
       "      <td>-0.195689</td>\n",
       "      <td>no_spatial 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>255</th>\n",
       "      <td>MajorAxisLength</td>\n",
       "      <td>0.723065</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>256</th>\n",
       "      <td>MinorAxisLength</td>\n",
       "      <td>0.734419</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>257</th>\n",
       "      <td>Solidity</td>\n",
       "      <td>0.340797</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>258</th>\n",
       "      <td>Extent</td>\n",
       "      <td>0.341929</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>259</th>\n",
       "      <td>Eccentricity</td>\n",
       "      <td>0.475183</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>260 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             Feature     Score        Origin\n",
       "0               pERK  0.223691  no_spatial 2\n",
       "1              Rad51 -0.106551  no_spatial 2\n",
       "2              CCND1 -0.010202  no_spatial 2\n",
       "3           Vimentin  0.105831  no_spatial 2\n",
       "4               aSMA -0.195689  no_spatial 2\n",
       "..               ...       ...           ...\n",
       "255  MajorAxisLength  0.723065     spatial 6\n",
       "256  MinorAxisLength  0.734419     spatial 6\n",
       "257         Solidity  0.340797     spatial 6\n",
       "258           Extent  0.341929     spatial 6\n",
       "259     Eccentricity  0.475183     spatial 6\n",
       "\n",
       "[260 rows x 3 columns]"
      ]
     },
     "execution_count": 299,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "neighbor_based_r2_scores"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 300,
   "id": "152658c9-e282-4650-b2c7-74557474ccbc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Feature</th>\n",
       "      <th>Score</th>\n",
       "      <th>Origin</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>pERK</td>\n",
       "      <td>0.331299</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Rad51</td>\n",
       "      <td>0.161001</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CCND1</td>\n",
       "      <td>0.353240</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Vimentin</td>\n",
       "      <td>0.124910</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>aSMA</td>\n",
       "      <td>0.224598</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>255</th>\n",
       "      <td>MajorAxisLength</td>\n",
       "      <td>0.723065</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>256</th>\n",
       "      <td>MinorAxisLength</td>\n",
       "      <td>0.734419</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>257</th>\n",
       "      <td>Solidity</td>\n",
       "      <td>0.340797</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>258</th>\n",
       "      <td>Extent</td>\n",
       "      <td>0.341929</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>259</th>\n",
       "      <td>Eccentricity</td>\n",
       "      <td>0.475183</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>390 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             Feature     Score     Origin\n",
       "0               pERK  0.331299         30\n",
       "1              Rad51  0.161001         30\n",
       "2              CCND1  0.353240         30\n",
       "3           Vimentin  0.124910         30\n",
       "4               aSMA  0.224598         30\n",
       "..               ...       ...        ...\n",
       "255  MajorAxisLength  0.723065  spatial 6\n",
       "256  MinorAxisLength  0.734419  spatial 6\n",
       "257         Solidity  0.340797  spatial 6\n",
       "258           Extent  0.341929  spatial 6\n",
       "259     Eccentricity  0.475183  spatial 6\n",
       "\n",
       "[390 rows x 3 columns]"
      ]
     },
     "execution_count": 300,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "combined_r2_scores = pd.concat([distance_based_r2_scores,neighbor_based_r2_scores])\n",
    "combined_r2_scores"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8d6f5628-54d4-437c-80db-daf1bf5e9ec4",
   "metadata": {},
   "source": [
    "# Plot r2 scores"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 301,
   "id": "554d5982-0a88-4b3b-9043-0db1659cf846",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Feature</th>\n",
       "      <th>Score</th>\n",
       "      <th>Origin</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>234</th>\n",
       "      <td>pERK</td>\n",
       "      <td>0.328706</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>235</th>\n",
       "      <td>Rad51</td>\n",
       "      <td>0.074586</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>236</th>\n",
       "      <td>CCND1</td>\n",
       "      <td>0.175600</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237</th>\n",
       "      <td>Vimentin</td>\n",
       "      <td>0.262394</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238</th>\n",
       "      <td>aSMA</td>\n",
       "      <td>-0.069078</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>MajorAxisLength</td>\n",
       "      <td>0.495486</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>MinorAxisLength</td>\n",
       "      <td>0.544784</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Solidity</td>\n",
       "      <td>0.147367</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Extent</td>\n",
       "      <td>0.127640</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Eccentricity</td>\n",
       "      <td>0.089365</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>78 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             Feature     Score     Origin\n",
       "234             pERK  0.328706  spatial 6\n",
       "235            Rad51  0.074586  spatial 6\n",
       "236            CCND1  0.175600  spatial 6\n",
       "237         Vimentin  0.262394  spatial 6\n",
       "238             aSMA -0.069078  spatial 6\n",
       "..               ...       ...        ...\n",
       "21   MajorAxisLength  0.495486         30\n",
       "22   MinorAxisLength  0.544784         30\n",
       "23          Solidity  0.147367         30\n",
       "24            Extent  0.127640         30\n",
       "25      Eccentricity  0.089365         30\n",
       "\n",
       "[78 rows x 3 columns]"
      ]
     },
     "execution_count": 301,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "best_spatial_scores = combined_r2_scores[combined_r2_scores[\"Origin\"] == \"spatial 6\"]\n",
    "best_no_spatial_scores = combined_r2_scores[combined_r2_scores[\"Origin\"] == \"no_spatial 6\"]\n",
    "best_radius_scores = combined_r2_scores[combined_r2_scores[\"Origin\"] == 30]\n",
    "\n",
    "best_r2_scores = pd.concat([best_spatial_scores,best_no_spatial_scores,best_radius_scores])\n",
    "best_r2_scores"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 302,
   "id": "dea77376-1407-43af-a341-179660f4dc8b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure()\n",
    "sns.barplot(x=\"Feature\", y=\"Score\",hue=\"Origin\", data=best_r2_scores)\n",
    "for ax in fig.axes:\n",
    "    for tick in ax.get_xticklabels():\n",
    "        tick.set_rotation(45)\n",
    "plt.ylim(0)\n",
    "fig.set_size_inches(15,7)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9fa098e6-e0f7-4e0e-ba56-73455a2a7060",
   "metadata": {},
   "source": [
    "## Plot only improved marker\n",
    "\n",
    "Select features which performed better in a feature engineered setting"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 303,
   "id": "71ba3b5a-ffed-4e34-ba7e-283abb5a4061",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Feature</th>\n",
       "      <th>Score</th>\n",
       "      <th>Origin</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Rad51</td>\n",
       "      <td>0.161001</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>CCND1</td>\n",
       "      <td>0.353240</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>aSMA</td>\n",
       "      <td>0.224598</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>PR</td>\n",
       "      <td>0.570002</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Ki67</td>\n",
       "      <td>0.675324</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>CK19</td>\n",
       "      <td>0.149660</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>p21</td>\n",
       "      <td>0.392342</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>AR</td>\n",
       "      <td>0.631286</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>cPARP</td>\n",
       "      <td>0.672032</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>CK17</td>\n",
       "      <td>0.741636</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>CK7</td>\n",
       "      <td>0.695882</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>HER2</td>\n",
       "      <td>0.731263</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Feature     Score  Origin\n",
       "0    Rad51  0.161001      30\n",
       "1    CCND1  0.353240      30\n",
       "2     aSMA  0.224598      30\n",
       "3       PR  0.570002      30\n",
       "4     Ki67  0.675324      30\n",
       "5     CK19  0.149660      30\n",
       "6      p21  0.392342      30\n",
       "7       AR  0.631286      30\n",
       "8    cPARP  0.672032      30\n",
       "9     CK17  0.741636      30\n",
       "10     CK7  0.695882      30\n",
       "11    HER2  0.731263      30"
      ]
     },
     "execution_count": 303,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "features_of_interest = []\n",
    "\n",
    "for feature in best_r2_scores[\"Feature\"].unique():\n",
    "    max_score = 0\n",
    "    max_score_data = None\n",
    "    for origin in best_r2_scores[\"Origin\"].unique():\n",
    "        feature_score = float(best_r2_scores.loc[(best_r2_scores[\"Origin\"] == origin) & (best_r2_scores[\"Feature\"] == feature)][\"Score\"].values)\n",
    "        if max_score < feature_score:\n",
    "            max_score = feature_score \n",
    "            max_score_data = best_r2_scores.loc[(best_r2_scores[\"Origin\"] == origin) & (best_r2_scores[\"Feature\"] == feature)]\n",
    "                                            \n",
    "    if max_score_data[\"Origin\"].values[0] == 30:\n",
    "        features_of_interest.append({\"Feature\": max_score_data[\"Feature\"].values[0], \"Score\": max_score_data[\"Score\"].values[0], \"Origin\": max_score_data[\"Origin\"].values[0]})\n",
    "        \n",
    "features_of_interest = pd.DataFrame().from_records(features_of_interest)\n",
    "features_of_interest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 304,
   "id": "e31284f0-caa4-4f08-9c3c-7380027e9dda",
   "metadata": {},
   "outputs": [],
   "source": [
    "features_of_interest.to_csv(f\"data/{case_to_evaluate}/distance_based/fe_improved_features.csv\", index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 305,
   "id": "a97e8b2c-a6ae-451d-9f8f-c852d79d930d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "46.15384615384615 % of the available features improved by using distance based KNN imputation.\n"
     ]
    }
   ],
   "source": [
    "print(f\"{ len(features_of_interest) / len(features_to_impute) * 100 } % of the available features improved by using distance based KNN imputation.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1d06fc93-c6d5-4d76-ba1e-015d7f5709a6",
   "metadata": {},
   "source": [
    "## Select only best performing features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 306,
   "id": "d43be9ef-3ee2-4e95-bc1f-6226885b3487",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Feature</th>\n",
       "      <th>Score</th>\n",
       "      <th>Origin</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>235</th>\n",
       "      <td>Rad51</td>\n",
       "      <td>0.074586</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>236</th>\n",
       "      <td>CCND1</td>\n",
       "      <td>0.175600</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238</th>\n",
       "      <td>aSMA</td>\n",
       "      <td>-0.069078</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>241</th>\n",
       "      <td>PR</td>\n",
       "      <td>0.103035</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245</th>\n",
       "      <td>Ki67</td>\n",
       "      <td>0.508467</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>CK19</td>\n",
       "      <td>-0.011531</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>247</th>\n",
       "      <td>p21</td>\n",
       "      <td>0.370521</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249</th>\n",
       "      <td>AR</td>\n",
       "      <td>0.513122</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>250</th>\n",
       "      <td>cPARP</td>\n",
       "      <td>0.670448</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>251</th>\n",
       "      <td>CK17</td>\n",
       "      <td>0.619265</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>252</th>\n",
       "      <td>CK7</td>\n",
       "      <td>0.605023</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>253</th>\n",
       "      <td>HER2</td>\n",
       "      <td>0.665425</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>105</th>\n",
       "      <td>Rad51</td>\n",
       "      <td>0.117983</td>\n",
       "      <td>no_spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>106</th>\n",
       "      <td>CCND1</td>\n",
       "      <td>0.165724</td>\n",
       "      <td>no_spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>108</th>\n",
       "      <td>aSMA</td>\n",
       "      <td>0.026117</td>\n",
       "      <td>no_spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111</th>\n",
       "      <td>PR</td>\n",
       "      <td>0.025584</td>\n",
       "      <td>no_spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115</th>\n",
       "      <td>Ki67</td>\n",
       "      <td>0.570659</td>\n",
       "      <td>no_spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116</th>\n",
       "      <td>CK19</td>\n",
       "      <td>0.123780</td>\n",
       "      <td>no_spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>117</th>\n",
       "      <td>p21</td>\n",
       "      <td>0.382716</td>\n",
       "      <td>no_spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119</th>\n",
       "      <td>AR</td>\n",
       "      <td>0.576943</td>\n",
       "      <td>no_spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120</th>\n",
       "      <td>cPARP</td>\n",
       "      <td>0.651047</td>\n",
       "      <td>no_spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>121</th>\n",
       "      <td>CK17</td>\n",
       "      <td>0.707976</td>\n",
       "      <td>no_spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>122</th>\n",
       "      <td>CK7</td>\n",
       "      <td>0.626989</td>\n",
       "      <td>no_spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>HER2</td>\n",
       "      <td>0.702996</td>\n",
       "      <td>no_spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Rad51</td>\n",
       "      <td>0.161001</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CCND1</td>\n",
       "      <td>0.353240</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>aSMA</td>\n",
       "      <td>0.224598</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>PR</td>\n",
       "      <td>0.570002</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Ki67</td>\n",
       "      <td>0.675324</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>CK19</td>\n",
       "      <td>0.149660</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>p21</td>\n",
       "      <td>0.392342</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>AR</td>\n",
       "      <td>0.631286</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>cPARP</td>\n",
       "      <td>0.672032</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>CK17</td>\n",
       "      <td>0.741636</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>CK7</td>\n",
       "      <td>0.695882</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>HER2</td>\n",
       "      <td>0.731263</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Feature     Score        Origin\n",
       "235   Rad51  0.074586     spatial 6\n",
       "236   CCND1  0.175600     spatial 6\n",
       "238    aSMA -0.069078     spatial 6\n",
       "241      PR  0.103035     spatial 6\n",
       "245    Ki67  0.508467     spatial 6\n",
       "246    CK19 -0.011531     spatial 6\n",
       "247     p21  0.370521     spatial 6\n",
       "249      AR  0.513122     spatial 6\n",
       "250   cPARP  0.670448     spatial 6\n",
       "251    CK17  0.619265     spatial 6\n",
       "252     CK7  0.605023     spatial 6\n",
       "253    HER2  0.665425     spatial 6\n",
       "105   Rad51  0.117983  no_spatial 6\n",
       "106   CCND1  0.165724  no_spatial 6\n",
       "108    aSMA  0.026117  no_spatial 6\n",
       "111      PR  0.025584  no_spatial 6\n",
       "115    Ki67  0.570659  no_spatial 6\n",
       "116    CK19  0.123780  no_spatial 6\n",
       "117     p21  0.382716  no_spatial 6\n",
       "119      AR  0.576943  no_spatial 6\n",
       "120   cPARP  0.651047  no_spatial 6\n",
       "121    CK17  0.707976  no_spatial 6\n",
       "122     CK7  0.626989  no_spatial 6\n",
       "123    HER2  0.702996  no_spatial 6\n",
       "1     Rad51  0.161001            30\n",
       "2     CCND1  0.353240            30\n",
       "4      aSMA  0.224598            30\n",
       "7        PR  0.570002            30\n",
       "11     Ki67  0.675324            30\n",
       "12     CK19  0.149660            30\n",
       "13      p21  0.392342            30\n",
       "15       AR  0.631286            30\n",
       "16    cPARP  0.672032            30\n",
       "17     CK17  0.741636            30\n",
       "18      CK7  0.695882            30\n",
       "19     HER2  0.731263            30"
      ]
     },
     "execution_count": 306,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "best_performing_features =best_r2_scores[pd.DataFrame(best_r2_scores[\"Feature\"].tolist()).isin(features_of_interest[\"Feature\"].tolist()).any(1).values]\n",
    "best_performing_features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 307,
   "id": "951e000f-7351-4ffa-b2c2-ff5967be4c2d",
   "metadata": {},
   "outputs": [],
   "source": [
    "best_performing_features.to_csv(f\"data/{case_to_evaluate}/distance_based/fe_best_performing_r2_scores.csv\", index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 308,
   "id": "fc28abbf-c80a-4d69-9def-1017863443fb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA3gAAAHACAYAAADwaMp/AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8qNh9FAAAACXBIWXMAAAsTAAALEwEAmpwYAAA9m0lEQVR4nO3dfZxd8733/9dHEoIgKdGSSBNKKxU3J8EhWk1RlIrLbfSOXlqXNnFXTautthq90Wo5rXKUVourinIcesmhfsU5Gu0hCBFK0JTQQ6SSCk0l8fn98V0TIya39p49s+b1fDzyMHvtNWs+s8zee73X9y4yE0mSJElS97dWqwuQJEmSJDWGAU+SJEmSasKAJ0mSJEk1YcCTJEmSpJow4EmSJElSTRjwJEmSJKkmere6gNW1ySab5NChQ1tdhiRJkiS1xD333PN8Zg7s6LluF/CGDh3K1KlTW12GJEmSJLVERPx5ec/ZRVOSJEmSasKAJ0mSJEk1YcCTJEmSpJrodmPwOrJo0SJmz57NwoULW11Kj9O3b18GDx5Mnz59Wl2KJEmS1OPVIuDNnj2bDTbYgKFDhxIRrS6nx8hM5s6dy+zZsxk2bFiry5EkSZJ6vFp00Vy4cCEbb7yx4a6TRQQbb7yxLaeSJElSF1GLgAcY7lrE8y5JkiR1HbUJeF3F7NmzGTt2LFtvvTVbbbUVJ510Eq+88sob9nvmmWc47LDDVnq8D37wg8ybN68JlUqSJEmqGwNeA2UmhxxyCAcffDAzZ87k0UcfZcGCBXz5y19+3X6LFy9m880355prrlnpMSdPnkz//v2bVLEkSZKkOqnFJCtdxa233krfvn35xCc+AUCvXr0499xzGTZsGMOGDeOmm25iwYIFLFmyhEsvvZQDDzyQBx98kJdffpljjjmGBx98kHe+850888wznH/++YwaNYqhQ4cydepUFixYwP77788ee+zBnXfeyaBBg7j++utZd911W/xbS5IkSeoqbMFroBkzZjBy5MjXbdtwww0ZMmQIixcv5t577+Waa67hP//zP1+3zwUXXMCAAQN46KGHOPPMM7nnnns6PP7MmTMZP348M2bMoH///lx77bVN+10kSZIkdT8GvE60zz778Ja3vOUN23/3u98xbtw4ALbbbju23377Dr9/2LBh7LjjjgCMHDmSWbNmNatUSZIkSd2QAa+Bhg8f/obWt7/97W88+eST9O7dm/XXX/9NHX+dddZZ+nWvXr1YvHjxmzqeJEmSpHox4DXQXnvtxcsvv8xll10GwJIlSzj11FM55phjWG+99Zb7faNHj+bqq68G4KGHHmL69OmdUq8kSZKkejHgNVBEcN111/GrX/2Krbfemm222Ya+ffvyrW99a4Xf95nPfIY5c+YwfPhwTj/9dN797nez0UYbdVLVkiRJkuoiMrPVNayWUaNG5dSpU1+37eGHH2bbbbdtUUVv3pIlS1i0aBF9+/bl8ccfZ++99+aRRx5h7bXXbnVpq6S7n39JkiSpO4mIezJzVEfPuUxCF/Dyyy8zZswYFi1aRGZywQUXdJtwJ0mSJKnrMOB1ARtssAHLtkpKkiRJ0uoy4EmSJEkrMPq80Q071pQTpjTsWFJHnGRFkiRJkmrCgCdJkiRJNWHAkyRJkqSaMOB1Ibfffjt33nnn0scXXnjh0kXTl+eMM87ge9/7XofPXX311QwfPpx3v/vdfPjDH25orZIkSZK6nlpOsjJy4opD0eq65+yPN/R4y3P77bfTr18/dt99dwCOP/74NT7WzJkz+fa3v82UKVMYMGAAzz33XKPKlCRJkrQcjZqUZ00n5LEFrwFeeuklDjjgAHbYYQe22247rrrqKgCGDh3K5z//eUaMGMEuu+zCY489BsCvf/1rdt11V3baaSf23ntvnn32WWbNmsWFF17Iueeey4477sgdd9zxuta5iy++mJ133pkddtiBQw89lJdffnmFNV188cWMHz+eAQMGALDppps28QxIkiRJ6goMeA1w0003sfnmm3P//ffz4IMPst9++y19bqONNmL69OlMmDCBk08+GYA99tiDP/zhD9x3332MGzeO7373uwwdOpTjjz+eU045hWnTpvGe97zndT/jkEMO4e677+b+++9n22235ac//ekKa3r00Ud59NFHGT16NP/8z//MTTfd1PDfW5IkSVLXUssump1txIgRnHrqqXzhC1/gwAMPfF04O+qoo5b+95RTTgFg9uzZHHnkkfzlL3/hlVdeYdiwYSv9GQ8++CCnn3468+bNY8GCBey7774r3H/x4sXMnDmT22+/ndmzZ/Pe976X6dOn079//zX/RSVJkiR1abbgNcA222zDvffey4gRIzj99NOZNGnS0uci4g1fn3DCCUyYMIHp06fz4x//mIULF670ZxxzzDH86Ec/Yvr06Xzta19b6fcMHjyYgw46iD59+jBs2DC22WYbZs6cuYa/oSRJkqTuwIDXAM888wzrrbceH/3oR5k4cSL33nvv0ufaxuNdddVV7LbbbgDMnz+fQYMGAXDppZcu3XeDDTbgxRdf7PBnvPjii2y22WYsWrSIX/ziFyut6eCDD+b2228H4Pnnn+fRRx9lyy23XKPfT5IkSVL3YBfNBpg+fToTJ05krbXWok+fPvzrv/7r0udeeOEFtt9+e9ZZZx1++ctfAmVpg8MPP5wBAwbw/ve/nz/96U8AfOhDH+Kwww7j+uuv57zzznvdzzjzzDPZddddGThwILvuuutyg2Cbfffdl9/85jcMHz6cXr16cfbZZ7Pxxhs3+DeXJEmS1JVEZra6htUyatSonDp16uu2Pfzww2y77bYtqmj5hg4dytSpU9lkk01aXUpTddXzL0mS1AiNmvYe1nzqe3UfnbFMQkTck5mjOnrOLpqSJEmSVBN20WyiWbNmtboESZIkST2ILXiSJEmSVBNNbcGLiP2AHwC9gJ9k5lnLPH8uMKZ6uB6waWb2b2ZNkiRJqr8nJ41o3MEGbNi4Y0lN1rSAFxG9gPOBfYDZwN0RcUNmPtS2T2ae0m7/E4CdmlWPJEmSJNVdM7to7gI8lplPZOYrwJXA2BXsfxTwyybWI0mSJEm11swumoOAp9o9ng3s2tGOEfF2YBhwaxPrkSRJkqQ3qFOX3q4yi+Y44JrMXNLRkxFxHHAcwJAhQ1Z6sIb+DwKGfHV6Q4/XTPPmzeOKK67gM5/5DADPPPMMJ554Itdcc81yv2fWrFkceOCBPPjgg2947sknn+STn/wkTz31FBHB5MmTGTp0aLPKlyRJkvQmNLOL5tPAFu0eD662dWQcK+iemZkXZeaozBw1cODABpZYP/PmzeOCCy5Y+njzzTdfYbhbmY9//ONMnDiRhx9+mLvuuotNN920EWVKkiRJaoJmtuDdDWwdEcMowW4c8OFld4qIdwEDgN83sZammjVrFvvvvz977LEHd955J4MGDeL6669n3XXXZdq0aRx//PG8/PLLbLXVVlxyySUMGDCgw+P88Ic/5MILL6R3794MHz6cK6+8kjPOOIPHH3+cxx57jOeff57Pf/7zfOpTn2LBggWMHTuWF154gUWLFvGNb3yDsWPHctppp/H444+z4447ss8++zB+/PilrXOzZs3iYx/7GC+99BIAP/rRj9h9992X+3s99NBDLF68mH322QeAfv36Nf7kSZIkqVsafd7ohhxnyglTGnIcFU1rwcvMxcAE4GbgYeDqzJwREZMi4qB2u44DrszMbFYtnWHmzJmMHz+eGTNm0L9/f6699lqgtIB95zvf4YEHHmDEiBF8/etfX+4xzjrrLO677z4eeOABLrzwwqXbH3jgAW699VZ+//vfM2nSJJ555hn69u3Lddddx7333sttt93GqaeeSmZy1llnsdVWWzFt2jTOPvvs1x1/00035ZZbbuHee+/lqquu4sQTT1zh7/Too4/Sv39/DjnkEHbaaScmTpzIkiUd9qKVJEmS1AU0dQxeZk4GJi+z7avLPD6jmTV0lmHDhrHjjjsCMHLkSGbNmsX8+fOZN28ee+65JwBHH300hx9++HKPsf322/ORj3yEgw8+mIMPPnjp9rFjx7Luuuuy7rrrMmbMGO666y4OOOAAvvSlL/Ff//VfrLXWWjz99NM8++yzK6xx0aJFTJgwgWnTptGrVy8effTRFe6/ePFi7rjjDu677z6GDBnCkUceyc9//nOOPfbYVTspkiRJkjpVM8fg9SjrrLPO0q979erF4sWLV/sYN954I+PHj+fee+9l5513XnqMiHjdfhHBL37xC+bMmcM999zDtGnTeOtb38rChQtXePxzzz2Xt771rdx///1MnTqVV155ZYX7Dx48mB133JEtt9yS3r17c/DBB3Pvvfeu9u8lSZIkqXMY8Jpoo402YsCAAdxxxx0AXH755Utb85b16quv8tRTTzFmzBi+853vMH/+fBYsWADA9ddfz8KFC5k7dy633347O++8M/Pnz2fTTTelT58+3Hbbbfz5z38GYIMNNuDFF1/s8GfMnz+fzTbbjLXWWovLL798pd0td955Z+bNm8ecOXMAuPXWWxk+fPganQtJkiRJzddVlkloqK60rMGll166dJKVLbfckp/97Gcd7rdkyRI++tGPMn/+fDKTE088kf79+wOl6+aYMWN4/vnn+cpXvsLmm2/ORz7yET70oQ8xYsQIRo0axbve9S4ANt54Y0aPHs12223H/vvvz/jx45f+jM985jMceuihXHbZZey3336sv/76K6y9V69efO9732OvvfYiMxk5ciSf+tSnGnNiJEmSJDVc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\n",
      "text/plain": [
       "<Figure size 1080x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure()\n",
    "sns.barplot(x=\"Feature\", y=\"Score\",hue=\"Origin\", data=best_performing_features)\n",
    "for ax in fig.axes:\n",
    "    for tick in ax.get_xticklabels():\n",
    "        tick.set_rotation(45)\n",
    "fig.set_size_inches(15,7)\n",
    "plt.ylim(0)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c2130714-7ab1-44ce-8d55-5fb84baf3da2",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
