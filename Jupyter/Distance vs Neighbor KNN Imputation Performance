{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 296,
   "id": "202d9ed9-d2ae-4810-9011-bec2b4241a64",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "case_to_evaluate=\"9_3_2\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6d49c84a-2aff-4e0f-a1e9-927c1722679f",
   "metadata": {},
   "source": [
    "# Distance based vs Neighbor based KNN Imputation Comparison"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 297,
   "id": "2b9de780-9f6f-491f-993e-f8e2e79d579d",
   "metadata": {},
   "outputs": [],
   "source": [
    "distance_based_r2_scores = pd.read_csv(f\"data/{case_to_evaluate}/distance_based/combined_r2_scores.csv\")\n",
    "neighbor_based_r2_scores = pd.read_csv(f\"data/{case_to_evaluate}/neighbor_based/combined_r2_scores.csv\")\n",
    "features_to_impute = pd.read_csv(f\"data/{case_to_evaluate}/distance_based/features_to_impute.csv\")\n",
    "\n",
    "features_to_impute = features_to_impute[\"0\"].to_list()\n",
    "if \"X_centroid\" in features_to_impute:\n",
    "    features_to_impute.remove(\"X_centroid\")\n",
    "\n",
    "if \"Y_centroid\" in features_to_impute:\n",
    "    features_to_impute.remove(\"Y_centroid\")\n",
    "\n",
    "distance_based_r2_scores.rename(columns={\"Radius\": \"Origin\"}, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 298,
   "id": "8e1da5b2-5f85-4c50-81cd-aa81a207bd94",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Feature</th>\n",
       "      <th>Score</th>\n",
       "      <th>Origin</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>pERK</td>\n",
       "      <td>0.331299</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Rad51</td>\n",
       "      <td>0.161001</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CCND1</td>\n",
       "      <td>0.353240</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Vimentin</td>\n",
       "      <td>0.124910</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>aSMA</td>\n",
       "      <td>0.224598</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>125</th>\n",
       "      <td>MajorAxisLength</td>\n",
       "      <td>0.076614</td>\n",
       "      <td>125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>126</th>\n",
       "      <td>MinorAxisLength</td>\n",
       "      <td>0.167688</td>\n",
       "      <td>125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>127</th>\n",
       "      <td>Solidity</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>128</th>\n",
       "      <td>Extent</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129</th>\n",
       "      <td>Eccentricity</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>125</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>130 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             Feature     Score  Origin\n",
       "0               pERK  0.331299      30\n",
       "1              Rad51  0.161001      30\n",
       "2              CCND1  0.353240      30\n",
       "3           Vimentin  0.124910      30\n",
       "4               aSMA  0.224598      30\n",
       "..               ...       ...     ...\n",
       "125  MajorAxisLength  0.076614     125\n",
       "126  MinorAxisLength  0.167688     125\n",
       "127         Solidity  0.000000     125\n",
       "128           Extent  0.000000     125\n",
       "129     Eccentricity  0.000000     125\n",
       "\n",
       "[130 rows x 3 columns]"
      ]
     },
     "execution_count": 298,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "distance_based_r2_scores"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 299,
   "id": "d38f3ad4-4e67-45ee-a811-857f7b6cee80",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Feature</th>\n",
       "      <th>Score</th>\n",
       "      <th>Origin</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>pERK</td>\n",
       "      <td>0.223691</td>\n",
       "      <td>no_spatial 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Rad51</td>\n",
       "      <td>-0.106551</td>\n",
       "      <td>no_spatial 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CCND1</td>\n",
       "      <td>-0.010202</td>\n",
       "      <td>no_spatial 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Vimentin</td>\n",
       "      <td>0.105831</td>\n",
       "      <td>no_spatial 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>aSMA</td>\n",
       "      <td>-0.195689</td>\n",
       "      <td>no_spatial 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>255</th>\n",
       "      <td>MajorAxisLength</td>\n",
       "      <td>0.723065</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>256</th>\n",
       "      <td>MinorAxisLength</td>\n",
       "      <td>0.734419</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>257</th>\n",
       "      <td>Solidity</td>\n",
       "      <td>0.340797</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>258</th>\n",
       "      <td>Extent</td>\n",
       "      <td>0.341929</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>259</th>\n",
       "      <td>Eccentricity</td>\n",
       "      <td>0.475183</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>260 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             Feature     Score        Origin\n",
       "0               pERK  0.223691  no_spatial 2\n",
       "1              Rad51 -0.106551  no_spatial 2\n",
       "2              CCND1 -0.010202  no_spatial 2\n",
       "3           Vimentin  0.105831  no_spatial 2\n",
       "4               aSMA -0.195689  no_spatial 2\n",
       "..               ...       ...           ...\n",
       "255  MajorAxisLength  0.723065     spatial 6\n",
       "256  MinorAxisLength  0.734419     spatial 6\n",
       "257         Solidity  0.340797     spatial 6\n",
       "258           Extent  0.341929     spatial 6\n",
       "259     Eccentricity  0.475183     spatial 6\n",
       "\n",
       "[260 rows x 3 columns]"
      ]
     },
     "execution_count": 299,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "neighbor_based_r2_scores"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 300,
   "id": "152658c9-e282-4650-b2c7-74557474ccbc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Feature</th>\n",
       "      <th>Score</th>\n",
       "      <th>Origin</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>pERK</td>\n",
       "      <td>0.331299</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Rad51</td>\n",
       "      <td>0.161001</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CCND1</td>\n",
       "      <td>0.353240</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Vimentin</td>\n",
       "      <td>0.124910</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>aSMA</td>\n",
       "      <td>0.224598</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>255</th>\n",
       "      <td>MajorAxisLength</td>\n",
       "      <td>0.723065</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>256</th>\n",
       "      <td>MinorAxisLength</td>\n",
       "      <td>0.734419</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>257</th>\n",
       "      <td>Solidity</td>\n",
       "      <td>0.340797</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>258</th>\n",
       "      <td>Extent</td>\n",
       "      <td>0.341929</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>259</th>\n",
       "      <td>Eccentricity</td>\n",
       "      <td>0.475183</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>390 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             Feature     Score     Origin\n",
       "0               pERK  0.331299         30\n",
       "1              Rad51  0.161001         30\n",
       "2              CCND1  0.353240         30\n",
       "3           Vimentin  0.124910         30\n",
       "4               aSMA  0.224598         30\n",
       "..               ...       ...        ...\n",
       "255  MajorAxisLength  0.723065  spatial 6\n",
       "256  MinorAxisLength  0.734419  spatial 6\n",
       "257         Solidity  0.340797  spatial 6\n",
       "258           Extent  0.341929  spatial 6\n",
       "259     Eccentricity  0.475183  spatial 6\n",
       "\n",
       "[390 rows x 3 columns]"
      ]
     },
     "execution_count": 300,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "combined_r2_scores = pd.concat([distance_based_r2_scores,neighbor_based_r2_scores])\n",
    "combined_r2_scores"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8d6f5628-54d4-437c-80db-daf1bf5e9ec4",
   "metadata": {},
   "source": [
    "# Plot r2 scores"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 301,
   "id": "554d5982-0a88-4b3b-9043-0db1659cf846",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Feature</th>\n",
       "      <th>Score</th>\n",
       "      <th>Origin</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>234</th>\n",
       "      <td>pERK</td>\n",
       "      <td>0.328706</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>235</th>\n",
       "      <td>Rad51</td>\n",
       "      <td>0.074586</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>236</th>\n",
       "      <td>CCND1</td>\n",
       "      <td>0.175600</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237</th>\n",
       "      <td>Vimentin</td>\n",
       "      <td>0.262394</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238</th>\n",
       "      <td>aSMA</td>\n",
       "      <td>-0.069078</td>\n",
       "      <td>spatial 6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>MajorAxisLength</td>\n",
       "      <td>0.495486</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>MinorAxisLength</td>\n",
       "      <td>0.544784</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Solidity</td>\n",
       "      <td>0.147367</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Extent</td>\n",
       "      <td>0.127640</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Eccentricity</td>\n",
       "      <td>0.089365</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>78 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             Feature     Score     Origin\n",
       "234             pERK  0.328706  spatial 6\n",
       "235            Rad51  0.074586  spatial 6\n",
       "236            CCND1  0.175600  spatial 6\n",
       "237         Vimentin  0.262394  spatial 6\n",
       "238             aSMA -0.069078  spatial 6\n",
       "..               ...       ...        ...\n",
       "21   MajorAxisLength  0.495486         30\n",
       "22   MinorAxisLength  0.544784         30\n",
       "23          Solidity  0.147367         30\n",
       "24            Extent  0.127640         30\n",
       "25      Eccentricity  0.089365         30\n",
       "\n",
       "[78 rows x 3 columns]"
      ]
     },
     "execution_count": 301,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "best_spatial_scores = combined_r2_scores[combined_r2_scores[\"Origin\"] == \"spatial 6\"]\n",
    "best_no_spatial_scores = combined_r2_scores[combined_r2_scores[\"Origin\"] == \"no_spatial 6\"]\n",
    "best_radius_scores = combined_r2_scores[combined_r2_scores[\"Origin\"] == 30]\n",
    "\n",
    "best_r2_scores = pd.concat([best_spatial_scores,best_no_spatial_scores,best_radius_scores])\n",
    "best_r2_scores"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 310,
   "id": "dea77376-1407-43af-a341-179660f4dc8b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2160x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure()\n",
    "sns.barplot(x=\"Feature\", y=\"Score\",hue=\"Origin\", data=best_r2_scores)\n",
    "for ax in fig.axes:\n",
    "    for tick in ax.get_xticklabels():\n",
    "        tick.set_rotation(45)\n",
    "plt.ylim(0)\n",
    "fig.set_size_inches(30,7)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9fa098e6-e0f7-4e0e-ba56-73455a2a7060",
   "metadata": {},
   "source": [
    "## Plot only improved marker\n",
    "\n",
    "Select features which performed better in a feature engineered setting"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 303,
   "id": "71ba3b5a-ffed-4e34-ba7e-283abb5a4061",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Feature</th>\n",
       "      <th>Score</th>\n",
       "      <th>Origin</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Rad51</td>\n",
       "      <td>0.161001</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>CCND1</td>\n",
       "      <td>0.353240</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>aSMA</td>\n",
       "      <td>0.224598</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>PR</td>\n",
       "      <td>0.570002</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Ki67</td>\n",
       "      <td>0.675324</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>CK19</td>\n",
       "      <td>0.149660</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>p21</td>\n",
       "      <td>0.392342</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>AR</td>\n",
       "      <td>0.631286</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>cPARP</td>\n",
       "      <td>0.672032</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>CK17</td>\n",
       "      <td>0.741636</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>CK7</td>\n",
       "      <td>0.695882</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>HER2</td>\n",
       "      <td>0.731263</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Feature     Score  Origin\n",
       "0    Rad51  0.161001      30\n",
       "1    CCND1  0.353240      30\n",
       "2     aSMA  0.224598      30\n",
       "3       PR  0.570002      30\n",
       "4     Ki67  0.675324      30\n",
       "5     CK19  0.149660      30\n",
       "6      p21  0.392342      30\n",
       "7       AR  0.631286      30\n",
       "8    cPARP  0.672032      30\n",
       "9     CK17  0.741636      30\n",
       "10     CK7  0.695882      30\n",
       "11    HER2  0.731263      30"
      ]
     },
     "execution_count": 303,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "features_of_interest = []\n",
    "\n",
    "for feature in best_r2_scores[\"Feature\"].unique():\n",
    "    max_score = 0\n",
    "    max_score_data = None\n",
    "    for origin in best_r2_scores[\"Origin\"].unique():\n",
    "        feature_score = float(best_r2_scores.loc[(best_r2_scores[\"Origin\"] == origin) & (best_r2_scores[\"Feature\"] == feature)][\"Score\"].values)\n",
    "        if max_score < feature_score:\n",
    "            max_score = feature_score \n",
    "            max_score_data = best_r2_scores.loc[(best_r2_scores[\"Origin\"] == origin) & (best_r2_scores[\"Feature\"] == feature)]\n",
    "                                            \n",
    "    if max_score_data[\"Origin\"].values[0] == 30:\n",
    "        features_of_interest.append({\"Feature\": max_score_data[\"Feature\"].values[0], \"Score\": max_score_data[\"Score\"].values[0], \"Origin\": max_score_data[\"Origin\"].values[0]})\n",
    "        \n",
    "features_of_interest = pd.DataFrame().from_records(features_of_interest)\n",
    "features_of_interest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 304,
   "id": "e31284f0-caa4-4f08-9c3c-7380027e9dda",
   "metadata": {},
   "outputs": [],
   "source": [
    "features_of_interest.to_csv(f\"data/{case_to_evaluate}/distance_based/fe_improved_features.csv\", index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 305,
   "id": "a97e8b2c-a6ae-451d-9f8f-c852d79d930d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "46.15384615384615 % of the available features improved by using distance based KNN imputation.\n"
     ]
    }
   ],
   "source": [
    "print(f\"{ len(features_of_interest) / len(features_to_impute) * 100 } % of the available features improved by using distance based KNN imputation.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1d06fc93-c6d5-4d76-ba1e-015d7f5709a6",
   "metadata": {},
   "source": [
    "## Select only best performing features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 309,
   "id": "d43be9ef-3ee2-4e95-bc1f-6226885b3487",
   "metadata": {},
   "outputs": [],
   "source": [
    "best_performing_features =best_r2_scores[pd.DataFrame(best_r2_scores[\"Feature\"].tolist()).isin(features_of_interest[\"Feature\"].tolist()).any(1).values]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 307,
   "id": "951e000f-7351-4ffa-b2c2-ff5967be4c2d",
   "metadata": {},
   "outputs": [],
   "source": [
    "best_performing_features.to_csv(f\"data/{case_to_evaluate}/distance_based/fe_best_performing_r2_scores.csv\", index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 308,
   "id": "fc28abbf-c80a-4d69-9def-1017863443fb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure()\n",
    "sns.barplot(x=\"Feature\", y=\"Score\",hue=\"Origin\", data=best_performing_features)\n",
    "for ax in fig.axes:\n",
    "    for tick in ax.get_xticklabels():\n",
    "        tick.set_rotation(45)\n",
    "fig.set_size_inches(15,7)\n",
    "plt.ylim(0)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c2130714-7ab1-44ce-8d55-5fb84baf3da2",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
